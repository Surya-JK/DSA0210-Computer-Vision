import cv2
import numpy as np
import matplotlib.pyplot as plt

def dilate_image(image_path):
    # Read the image in grayscale (morphological operations typically work on binary/grayscale images)
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    
    if image is None:
        print("Error: Image not loaded. Check the file path.")
        return None, None
    
    # Apply thresholding to create a binary image (if needed)
    _, binary = cv2.threshold(image, 127, 255, cv2.THRESH_BINARY)
    
    # Create a kernel (structuring element) for dilation
    # Larger kernel size will produce more dilation
    kernel = np.ones((5, 5), np.uint8)  # 5x5 square kernel
    
    # Apply dilation
    # Parameters: (image, kernel, iterations)
    dilated = cv2.dilate(binary, kernel, iterations=1)
    
    # Display the original and dilated images
    plt.figure(figsize=(10, 5))
    
    plt.subplot(1, 2, 1)
    plt.imshow(binary, cmap='gray')
    plt.title('Original Binary Image')
    plt.axis('off')
    
    plt.subplot(1, 2, 2)
    plt.imshow(dilated, cmap='gray')
    plt.title('Dilated Image')
    plt.axis('off')
    
    plt.tight_layout()
    plt.show()
    
    return binary, dilated

# Example usage
original, dilated = dilate_image('your_image.jpg')
