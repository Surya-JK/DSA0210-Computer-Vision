import cv2
import matplotlib.pyplot as plt

def detect_edges(image_path):
    # Read the image in grayscale (edge detection works on single-channel images)
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    
    if image is None:
        print("Error: Image not loaded. Check the file path.")
        return None, None
    
    # Apply Gaussian blur to reduce noise before edge detection
    blurred = cv2.GaussianBlur(image, (5, 5), 0)
    
    # Apply Canny edge detection
    # Parameters: (image, threshold1, threshold2)
    edges = cv2.Canny(blurred, 50, 150)
    
    # Display the original and edge-detected images
    plt.figure(figsize=(10, 5))
    
    plt.subplot(1, 2, 1)
    plt.imshow(image, cmap='gray')
    plt.title('Original Grayscale Image')
    plt.axis('off')
    
    plt.subplot(1, 2, 2)
    plt.imshow(edges, cmap='gray')
    plt.title('Edge Detection (Canny)')
    plt.axis('off')
    
    plt.tight_layout()
    plt.show()
    
    return image, edges

# Example usage
original, edges = detect_edges('your_image.jpg')
